import 'dart:io';

import 'package:args/args.dart';
import 'package:mason_logger/mason_logger.dart';

import '../utils/pubspec_utils.dart';
import 'i_command.dart';

/// Comando respons√°vel por atualizar o CLI para a √∫ltima vers√£o
class UpgradeCommand implements ICommand {
  /// Construtor que recebe o logger para output
  UpgradeCommand(this._logger);

  final Logger _logger;

  @override
  ArgParser build() {
    return ArgParser()
      ..addFlag('help', abbr: 'h', help: 'Mostra informa√ß√µes de ajuda')
      ..addFlag('force', abbr: 'f', help: 'For√ßa a atualiza√ß√£o mesmo se j√° estiver na √∫ltima vers√£o');
  }

  @override
  Future<void> run(ArgResults command) async {
    // Verificar flags primeiro
    if (command['help'] as bool) {
      _showHelp();
      return;
    }

    final force = command['force'] as bool;

    _logger.info('üîç Verificando por atualiza√ß√µes...');

    final currentVersion = PubspecUtils.getVersion();
    _logger.info('üì¶ Vers√£o atual: $currentVersion');

    final remoteVersion = await PubspecUtils.getRemoteVersion();
    if (remoteVersion == null) {
      _logger.err('‚ùå N√£o foi poss√≠vel verificar a vers√£o remota.');
      return;
    }

    _logger.info('üì¶ Vers√£o remota: $remoteVersion');

    if (currentVersion == remoteVersion && !force) {
      _logger.success('‚úÖ Voc√™ j√° est√° usando a vers√£o mais recente do STMR CLI.');
      return;
    }

    if (force) {
      _logger.info('üîÑ For√ßando atualiza√ß√£o...');
    } else {
      _logger.info('üÜï Nova vers√£o dispon√≠vel: $remoteVersion');
    }

    _logger.info('‚¨áÔ∏è  Atualizando STMR CLI...');

    final result = await Process.run('dart', [
      'pub',
      'global',
      'activate',
      '--source',
      'git',
      'https://github.com/thiagomoreira/stmr_cli.git',
    ]);

    if (result.exitCode == 0) {
      _logger.success('‚úÖ STMR CLI atualizado com sucesso para a vers√£o $remoteVersion!');
    } else {
      _logger.err('‚ùå Erro ao atualizar STMR CLI:');
      _logger.err(result.stderr.toString());
    }
  }

  /// Mostra informa√ß√µes de ajuda do comando upgrade
  void _showHelp() {
    _logger.info('Comando para atualizar o CLI para a vers√£o mais recente');
    _logger.info('');
    _logger.info('Uso: stmr upgrade [op√ß√µes]');
    _logger.info('');
    _logger.info('Op√ß√µes:');
    _logger.info('  -f, --force    For√ßa a reinstala√ß√£o mesmo na vers√£o atual');
    _logger.info('  -h, --help     Mostra esta ajuda');
    _logger.info('');
    _logger.info('Exemplos:');
    _logger.info('  stmr upgrade           # Atualiza para a vers√£o mais recente');
    _logger.info('  stmr upgrade --force   # For√ßa a reinstala√ß√£o');
  }
}
